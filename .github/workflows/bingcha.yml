name: Fetch BINGCHA M3U via Proxy

on:
  schedule:
    - cron: "0 0 * * *"  # Run daily at midnight UTC
  workflow_dispatch:

permissions:
  contents: write

jobs:
  fetch-m3u:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout repository
      - name: Checkout repo
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Install jq (for JSON parsing)
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y jq

      # 3Ô∏è‚É£ Fetch verified proxies
      - name: Fetch verified proxies from openproxy.space
        id: fetch_proxies
        run: |
          echo "Fetching verified proxies from openproxy.space..."
          mkdir -p /tmp/proxies

          # Get fresh SOCKS5 and HTTP lists
          curl -s "https://openproxy.space/list/socks5" -o /tmp/proxies/socks5.json
          curl -s "https://openproxy.space/list/http" -o /tmp/proxies/http.json

          # Extract ip:port from JSON
          jq -r '.[] | "\(.ip):\(.port)"' /tmp/proxies/socks5.json > /tmp/socks5.txt
          jq -r '.[] | "\(.ip):\(.port)"' /tmp/proxies/http.json > /tmp/http.txt

          SOCKS5_COUNT=$(wc -l < /tmp/socks5.txt)
          HTTP_COUNT=$(wc -l < /tmp/http.txt)
          echo "‚úÖ Got $SOCKS5_COUNT SOCKS5 and $HTTP_COUNT HTTP proxies"

      # 4Ô∏è‚É£ Set variables
      - name: Set environment variables
        run: |
          echo "URL=https://fy.188766.xyz/?ip=192.168.1.2&proxy=true&lunbo=false&bconly=true" >> $GITHUB_ENV
          echo "OUTPUT=bingcha.m3u" >> $GITHUB_ENV

      # 5Ô∏è‚É£ Try SOCKS5 proxies first
      - name: Try verified SOCKS5 proxies
        id: socks5
        run: |
          echo "üöÄ Starting verified SOCKS5 proxy rotation..."
          success=false

          while read -r PROXY; do
            echo "‚Üí Trying SOCKS5 proxy socks5h://$PROXY"
            if curl -sS --max-time 25 -x "socks5h://$PROXY" -A "curl/8.13.0" -o "$OUTPUT" "$URL"; then
              if grep -q -m1 '^#EXTM3U' "$OUTPUT"; then
                echo "‚úÖ Success with $PROXY"
                success=true
                break
              else
                echo "‚ö†Ô∏è Not a valid M3U response, skipping..."
              fi
            else
              echo "‚ùå Proxy failed: $PROXY"
            fi
          done < <(head -n 80 /tmp/socks5.txt)

          if [ "$success" != true ]; then
            echo "‚ö†Ô∏è All SOCKS5 proxies failed."
            exit 1
          fi

      # 6Ô∏è‚É£ HTTP fallback (only runs if SOCKS5 failed)
      - name: Try verified HTTP proxies
        if: failure()
        run: |
          echo "üåê Starting verified HTTP proxy fallback..."
          success=false

          while read -r PROXY; do
            echo "‚Üí Trying HTTP proxy http://$PROXY"
            if curl -sS --max-time 25 -x "http://$PROXY" -A "curl/8.13.0" -o "$OUTPUT" "$URL"; then
              if grep -q -m1 '^#EXTM3U' "$OUTPUT"; then
                echo "‚úÖ Success with $PROXY"
                success=true
                break
              else
                echo "‚ö†Ô∏è Not a valid M3U response, skipping..."
              fi
            else
              echo "‚ùå Proxy failed: $PROXY"
            fi
          done < <(head -n 80 /tmp/http.txt)

          if [ "$success" != true ]; then
            echo "‚ùå All verified HTTP proxies failed."
            exit 1
          fi

      # 7Ô∏è‚É£ Commit & push if file updated
      - name: Commit & push updated M3U
        if: success()
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add "$OUTPUT"
          git diff --quiet && git diff --staged --quiet || git commit -m "Auto-update: bingcha.m3u [$(date -u '+%Y-%m-%d %H:%M:%S')]"
          git push origin HEAD:main
