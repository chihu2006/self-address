name: Fetch BINGCHA M3U via Proxy

on:
  schedule:
    - cron: "0 0 * * *"  # Daily at midnight UTC
  workflow_dispatch:

permissions:
  contents: write

jobs:
  fetch-m3u:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout repo
      - name: Checkout repo
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Install dependencies
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y jq curl

      # 3Ô∏è‚É£ Fetch proxies
      - name: Fetch proxies
        run: |
          mkdir -p /tmp/proxies /tmp/verified_proxies

          # SOCKS5
          curl -s "https://api.proxyscrape.com/v4/free-proxy-list/get?request=display_proxies&protocol=socks5&proxy_format=protocolipport&format=json&timeout=20000" -o /tmp/proxies/socks5.json || echo "Warning: SOCKS5 fetch failed"
          jq -r '.[] | "\(.ip):\(.port)"' /tmp/proxies/socks5.json > /tmp/proxies/socks5.txt || echo ""
          SOCKS5_COUNT=$(wc -l < /tmp/proxies/socks5.txt || echo 0)

          # SOCKS4
          curl -s "https://api.proxyscrape.com/v4/free-proxy-list/get?request=display_proxies&protocol=socks4&proxy_format=protocolipport&format=json&timeout=20000" -o /tmp/proxies/socks4.json || echo "Warning: SOCKS4 fetch failed"
          jq -r '.[] | "\(.ip):\(.port)"' /tmp/proxies/socks4.json > /tmp/proxies/socks4.txt || echo ""
          SOCKS4_COUNT=$(wc -l < /tmp/proxies/socks4.txt || echo 0)

          # HTTP
          curl -s "https://api.proxyscrape.com/v4/free-proxy-list/get?request=display_proxies&protocol=http&proxy_format=protocolipport&format=json&timeout=20000" -o /tmp/proxies/http.json || echo "Warning: HTTP fetch failed"
          jq -r '.[] | "\(.ip):\(.port)"' /tmp/proxies/http.json > /tmp/proxies/http.txt || echo ""
          HTTP_COUNT=$(wc -l < /tmp/proxies/http.txt || echo 0)

          echo "‚úÖ Proxies fetched: SOCKS5=$SOCKS5_COUNT, SOCKS4=$SOCKS4_COUNT, HTTP=$HTTP_COUNT"

      # 4Ô∏è‚É£ Set environment variables
      - name: Set environment variables
        run: |
          echo "URL=https://fy.188766.xyz/?ip=192.168.1.2&proxy=true&lunbo=false&bconly=true" >> $GITHUB_ENV
          echo "OUTPUT=bingcha.m3u" >> $GITHUB_ENV

      # 5Ô∏è‚É£ Verify proxies
      - name: Verify proxies
        run: |
          PROXY_TYPES=("socks5" "socks4" "http")

          for TYPE in "${PROXY_TYPES[@]}"; do
            INPUT_FILE="/tmp/proxies/${TYPE}.txt"
            OUTPUT_FILE="/tmp/verified_proxies/${TYPE}.txt"
            FAIL_FILE="/tmp/verified_proxies/${TYPE}_fail.txt"
            [ -f "$INPUT_FILE" ] || continue

            TOTAL=$(wc -l < "$INPUT_FILE")
            SUCCESS=0
            FAILURE=0
            > "$OUTPUT_FILE"
            > "$FAIL_FILE"

            echo "üîç Verifying $TYPE proxies (Total: $TOTAL)..."
            while read -r PROXY; do
              [ -z "$PROXY" ] && continue
              case "$TYPE" in
                socks5) PREFIX="socks5h://";;
                socks4) PREFIX="socks4a://";;
                http)   PREFIX="http://";;
              esac

              if curl -sS --max-time 15 -x "$PREFIX$PROXY" -I "$URL" | grep -q "200"; then
                echo "$PROXY" >> "$OUTPUT_FILE"
                SUCCESS=$((SUCCESS+1))
              else
                echo "$PROXY" >> "$FAIL_FILE"
                FAILURE=$((FAILURE+1))
              fi
            done < "$INPUT_FILE"

            echo "‚úÖ $TYPE verified: $SUCCESS/$TOTAL, failed: $FAILURE"
          done

      # 6Ô∏è‚É£ Fetch M3U using verified proxies
      - name: Fetch M3U
        run: |
          success=false
          PROXY_TYPES=("socks5" "socks4" "http")
          FETCH_FAIL=0
          FETCH_SUCCESS=0

          for TYPE in "${PROXY_TYPES[@]}"; do
            FILE="/tmp/verified_proxies/${TYPE}.txt"
            [ -f "$FILE" ] || continue

            while read -r PROXY; do
              [ -z "$PROXY" ] && continue
              case "$TYPE" in
                socks5) PREFIX="socks5h://";;
                socks4) PREFIX="socks4a://";;
                http)   PREFIX="http://";;
              esac

              if curl -sS --max-time 25 -x "$PREFIX$PROXY" -A "curl/8.13.0" -o "$OUTPUT" "$URL"; then
                if grep -q -m1 '^#EXTM3U' "$OUTPUT"; then
                  echo "‚úÖ M3U fetched successfully with $TYPE proxy $PROXY"
                  FETCH_SUCCESS=$((FETCH_SUCCESS+1))
                  success=true
                  break 2
                else
                  echo "$PROXY" >> "/tmp/verified_proxies/${TYPE}_fail.txt"
                  echo "‚ö†Ô∏è Not a valid M3U: $PROXY"
                  FETCH_FAIL=$((FETCH_FAIL+1))
                fi
              else
                echo "$PROXY" >> "/tmp/verified_proxies/${TYPE}_fail.txt"
                echo "‚ùå Proxy fetch failed: $PROXY"
                FETCH_FAIL=$((FETCH_FAIL+1))
              fi
            done < "$FILE"
          done

          echo "üìä M3U fetch stats: Success=$FETCH_SUCCESS, Failed=$FETCH_FAIL"

          if [ "$success" != true ]; then
            echo "‚ùå All proxies failed to fetch M3U."
            exit 1
          fi

      # 7Ô∏è‚É£ Print summary table
      - name: Print proxy summary
        run: |
          echo "üìä Proxy & M3U fetch summary:"
          printf "%-8s | %-7s | %-8s | %-8s\n" "Type" "Fetched" "Verified" "M3U Fail"
          echo "----------------------------------------"
          
          for TYPE in socks5 socks4 http; do
            FETCHED_FILE="/tmp/proxies/${TYPE}.txt"
            VERIFIED_FILE="/tmp/verified_proxies/${TYPE}.txt"
            FAIL_FILE="/tmp/verified_proxies/${TYPE}_fail.txt"

            FETCHED=$( [ -f "$FETCHED_FILE" ] && wc -l < "$FETCHED_FILE" || echo 0 )
            VERIFIED=$( [ -f "$VERIFIED_FILE" ] && wc -l < "$VERIFIED_FILE" || echo 0 )
            M3U_FAIL=$( [ -f "$FAIL_FILE" ] && wc -l < "$FAIL_FILE" || echo 0 )

            printf "%-8s | %-7s | %-8s | %-8s\n" "$TYPE" "$FETCHED" "$VERIFIED" "$M3U_FAIL"
          done

      # 8Ô∏è‚É£ Commit & push updated M3U
      - name: Commit & push
        if: success()
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add "$OUTPUT"
          git diff --quiet && git diff --staged --quiet || git commit -m "Update bingcha.m3u [$(date -u '+%Y-%m-%d %H:%M:%S')]"
          git push origin HEAD:main
