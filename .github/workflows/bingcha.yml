name: Fetch BINGCHA M3U via Proxy

on:
  schedule:
    - cron: "0 0 * * *"  # daily at midnight UTC
  workflow_dispatch:

permissions:
  contents: write

jobs:
  fetch-m3u:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repository
      - name: Checkout repo
        uses: actions/checkout@v4

      # 2. Get mixed proxy list
      - name: Download proxy list
        run: |
          echo "Fetching free mixed proxies..."
          API_URL='https://api.proxyscrape.com/v4/free-proxy-list/get?request=display_proxies&proxy_format=ipport&format=text'
          curl -sS --max-time 40 "$API_URL" -o /tmp/proxies_raw.txt || { echo "❌ Failed to download proxy list"; exit 1; }
          sed -i 's/\r$//' /tmp/proxies_raw.txt
          grep -E '^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+:[0-9]+$' /tmp/proxies_raw.txt > /tmp/proxies.txt
          echo "Downloaded $(wc -l < /tmp/proxies.txt) valid-looking proxies"

      # 3. Validate proxy type (HTTP vs SOCKS5)
      - name: Validate proxies
        run: |
          echo "Testing proxy protocols..."
          touch /tmp/valid_http.txt /tmp/valid_socks5.txt

          count=0
          while read -r ipport && [ $count -lt 50 ]; do
            [ -z "$ipport" ] && continue
            count=$((count+1))
            echo "Testing proxy $ipport..."

            # Try SOCKS5 first (faster failure detection)
            if curl -sS --max-time 5 -x "socks5h://$ipport" http://httpbin.org/ip >/dev/null 2>&1; then
              echo "$ipport" >> /tmp/valid_socks5.txt
              echo "  ✅ SOCKS5 works: $ipport"
              continue
            fi

            # Try HTTP next
            if curl -sS --max-time 5 -x "http://$ipport" http://httpbin.org/ip >/dev/null 2>&1; then
              echo "$ipport" >> /tmp/valid_http.txt
              echo "  ✅ HTTP works: $ipport"
              continue
            fi

            echo "  ❌ Proxy failed: $ipport"
          done < /tmp/proxies.txt

          echo "Validation complete."
          echo "SOCKS5 proxies: $(wc -l < /tmp/valid_socks5.txt)"
          echo "HTTP proxies:   $(wc -l < /tmp/valid_http.txt)"

      # 4. Fetch M3U with correct proxy type
      - name: Fetch M3U
        run: |
          echo "Fetching M3U using validated proxies..."
          echo "URL=https://fy.188766.xyz/?ip=192.168.1.2&proxy=true&lunbo=false&bconly=true" >> $GITHUB_ENV
          echo "OUTPUT=bingcha.m3u" >> $GITHUB_ENV

          success=false

          # Try SOCKS5 proxies first
          while read -r ipport; do
            [ -z "$ipport" ] && continue
            PROXY="socks5h://$ipport"
            echo "Trying SOCKS5 proxy $PROXY..."
            if curl -k -L --fail --max-time 30 -x "$PROXY" -A "curl/8.13.0" -o "$OUTPUT" "$URL"; then
              if grep -q '#EXTM3U' "$OUTPUT"; then
                echo "✅ Success with SOCKS5 proxy $PROXY"
                success=true
                break
              fi
            fi
          done < /tmp/valid_socks5.txt

          # If SOCKS5 all failed, try HTTP
          if [ "$success" != true ]; then
            while read -r ipport; do
              [ -z "$ipport" ] && continue
              PROXY="http://$ipport"
              echo "Trying HTTP proxy $PROXY..."
              if curl -k -L --fail --max-time 30 -x "$PROXY" -A "curl/8.13.0" -o "$OUTPUT" "$URL"; then
                if grep -q '#EXTM3U' "$OUTPUT"; then
                  echo "✅ Success with HTTP proxy $PROXY"
                  success=true
                  break
                fi
              fi
            done < /tmp/valid_http.txt
          fi

          if [ "$success" != true ]; then
            echo "❌ All proxies failed to fetch M3U."
            exit 1
          fi

      # 5. Commit & push if bingcha.m3u updated
      - name: Commit & push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add "$OUTPUT"
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update bingcha.m3u ($(date -u '+%Y-%m-%d %H:%M:%S UTC'))"
            git push origin HEAD:main
            echo "✅ Updated bingcha.m3u pushed successfully."
          fi
