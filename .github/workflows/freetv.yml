name: Fetch & Verify IPTV M3U

on:
  schedule:
    - cron: "0 0 * * *"  # daily at midnight UTC
  workflow_dispatch:

permissions:
  contents: write

jobs:
  fetch-and-verify:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repository
      - name: Checkout repo
        uses: actions/checkout@v4

      # 2. Set environment variables
      - name: Set variables
        run: |
          echo "URL=https://freetv.fun/test_channels_banned_cn_new.m3u" >> $GITHUB_ENV
          echo "OUTPUT=rawaddress/freetv.m3u" >> $GITHUB_ENV
          echo "FAILED_OUTPUT=rawaddress/failed_freetv.m3u" >> $GITHUB_ENV

      # 3. Create rawaddress folder
      - name: Prepare folder
        run: mkdir -p rawaddress

      # 4. Fetch M3U using curl
      - name: Fetch M3U via curl
        run: |
          echo "Fetching M3U..."
          for i in {1..5}; do
            curl --fail --retry 5 --retry-delay 5 -L -A "Chrome/140.0.0.0" -o $OUTPUT $URL && break
            echo "Attempt $i failed, retrying..."
            sleep 5
          done

          if [ ! -s $OUTPUT ]; then
            echo "Error: Downloaded file is empty or incomplete."
            exit 1
          fi

          echo "M3U fetch completed successfully."

      # 5. Install ffprobe
      - name: Install ffprobe
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg

      # 6. Verify IPTV streams with detailed logging
      - name: Verify IPTV streams
        run: |
          set -e
          input="$OUTPUT"
          failed="$FAILED_OUTPUT"
          : > "$failed"
          i=0
          failed_count=0

          echo "🔍 Starting detailed IPTV verification..."

          while IFS= read -r url; do
            [[ -z "$url" || "$url" =~ ^# ]] && continue
            ((i++))
            echo ""
            echo "[$i] Checking: $url"
            start=$(date +%s.%N)
            output=$(timeout 15s ffprobe -v error -show_entries stream=codec_type -of default=nw=1:nk=1 "$url" 2>&1)
            status=$?
            end=$(date +%s.%N)
            response_time=$(echo "$end - $start" | bc)

            if [ $status -eq 0 ]; then
              echo "✅ OK — Stream works (response time: ${response_time}s)"
            else
              echo "❌ FAILED — status=$status (response_time=-1)"
              echo "🧾 ffprobe output:"
              echo "$output"
              echo "$url" >> "$failed"
              ((failed_count++))
            fi
          done < "$input"

          echo ""
          echo "🎯 Verification complete!"
          echo "   Total checked: $i"
          echo "   Failed: $failed_count"
          echo "   Failed streams saved to: $failed"

      # 7. Commit & push updated M3U and failed streams
      - name: Commit & push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add $OUTPUT $FAILED_OUTPUT
          git diff --quiet && git diff --staged --quiet || git commit -m "Update freetv.m3u and failed_freetv.m3u"
          git push origin HEAD:main
          fi
