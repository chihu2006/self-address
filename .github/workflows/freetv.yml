name: Fetch & Verify IPTV M3U (Top N Channels)

on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  fetch-and-verify:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repository
      - name: Checkout repo
        uses: actions/checkout@v4

      # 2. Set environment variables
      - name: Set variables
        run: |
          echo "URL=https://freetv.fun/test_channels_banned_cn_new.m3u" >> $GITHUB_ENV
          echo "OUTPUT=rawaddress/freetv.m3u" >> $GITHUB_ENV
          echo "FAILED_OUTPUT=rawaddress/failed_freetv.m3u" >> $GITHUB_ENV
          echo "TOP_FILE=rawaddress/top_channels.m3u" >> $GITHUB_ENV
          echo "LOG_FILE=rawaddress/verification_log.txt" >> $GITHUB_ENV
          echo "CHANNEL_LIMIT=200" >> $GITHUB_ENV

      # 3. Prepare folder
      - name: Prepare folder
        run: mkdir -p rawaddress

      # 4. Fetch M3U
      - name: Fetch M3U via curl
        run: |
          echo "Fetching M3U..."
          for i in {1..5}; do
            curl --fail --retry 5 --retry-delay 5 -L -A "Chrome/140.0.0.0" -o $OUTPUT $URL && break
            echo "Attempt $i failed, retrying..."
            sleep 5
          done

          if [ ! -s $OUTPUT ]; then
            echo "❌ Error: Downloaded file is empty or incomplete."
            exit 1
          fi

          echo "✅ M3U fetch completed successfully."

      # 5. Install ffmpeg (for ffprobe)
      - name: Install ffmpeg
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg

      # 6. Install iptv-checker
      - name: Install iptv-checker
        run: npm install -g iptv-checker

      # 7. Extract top N channels (preserve header)
      - name: Extract top channels
        run: |
          head -n 1 "$OUTPUT" > "$TOP_FILE"
          grep -v '^#' "$OUTPUT" | grep -v '^$' | head -n $CHANNEL_LIMIT >> "$TOP_FILE"
          count=$(grep -c '^http' "$TOP_FILE" || echo 0)
          echo "✅ Extracted $count channels for verification."

      # 8. Verify channels and log results
      - name: Verify channels and save log
        run: |
          input="$TOP_FILE"
          failed="$FAILED_OUTPUT"
          log="$LOG_FILE"
          : > "$failed"
          : > "$log"

          total=$(grep -c '^http' "$input" || echo 0)
          echo "🔍 Verifying $total channels..." | tee -a "$log"
          echo "----------------------------------------" | tee -a "$log"

          # Run iptv-checker in JSON mode for structured output
          iptv-checker "$input" --json > temp_results.json

          # Log all results with status and timeout
          jq -r '.[] | "Channel: \(.channel.name // "Unknown")\nURL: \(.channel.url)\nOK: \(.status.ok)\nTimeout: \(.status.timeout)\n-----"' temp_results.json | tee -a "$log"

          # Extract failed ones (ok == false) and save to failed file
          jq -r '.[] | select(.status.ok == false) | .channel.url' temp_results.json > "$failed"

          failed_count=$(grep -c '^http' "$failed" || echo 0)

          echo "" | tee -a "$log"
          echo "🎯 Verification complete!" | tee -a "$log"
          echo "   Total checked: $total" | tee -a "$log"
          echo "   Failed: $failed_count" | tee -a "$log"
          echo "   Failed list saved to: $failed" | tee -a "$log"
          echo "----------------------------------------" | tee -a "$log"

          # Cleanup
          rm temp_results.json

      # 9. Commit & push
      - name: Commit & push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add $OUTPUT $FAILED_OUTPUT $LOG_FILE
          git diff --quiet && git diff --staged --quiet || git commit -m "Update freetv.m3u, failed_freetv.m3u, and log"
          git push origin HEAD:main
