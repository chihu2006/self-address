Skip to content
Chat history

You said:
'name: Fetch CatVod M3U via Proxy (10 Validated, No Retry)

on:
  schedule:
    - cron: "0 0 * * *"  # Daily at midnight UTC
  workflow_dispatch:

permissions:
  contents: write

jobs:
  fetch-m3u:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Set constants
      - name: Set environment variables
        run: |
          echo "URL=https://live.catvod.com/tv.m3u" >> $GITHUB_ENV
          echo "OUTPUT=catvod.m3u" >> $GITHUB_ENV

      # 3. Fetch proxies and validate 10 working ones (parallel test, 5s timeout)
      - name: Fetch and validate proxies (parallel)
        run: |
          echo "Fetching HTTP proxy list from Proxifly..."
          PROXY_LIST_URL="https://cdn.jsdelivr.net/gh/proxifly/free-proxy-list@main/proxies/protocols/http/data.json"
          curl -s "$PROXY_LIST_URL" -o /tmp/all_proxies.json

          echo "Selecting first 30 proxies for testing..."
          jq -r '.[0:30] | .[] | "\(.ip):\(.port)"' /tmp/all_proxies.json > /tmp/test_proxies.txt

          echo "Testing proxies in parallel (timeout 5s each)..."
          URL_TO_TEST="https://api.ipify.org"
          WORKING_FILE="/tmp/working_proxies.txt"
          > "$WORKING_FILE"

          MAX_PARALLEL=10
          COUNT=0

          while read PROXY; do
            (
              if curl --silent --fail --max-time 5 -x "http://$PROXY" "$URL_TO_TEST" > /dev/null; then
                echo "$PROXY" >> "$WORKING_FILE"
                echo "‚úÖ Proxy $PROXY works"
              else
                echo "‚ùå Proxy $PROXY failed"
              fi
            ) &

            ((COUNT++))
            if (( COUNT % MAX_PARALLEL == 0 )); then
              wait
            fi
          done < /tmp/test_proxies.txt
          wait

          if [ ! -s "$WORKING_FILE" ]; then
            echo "üö® No working proxies found!"
            exit 1
          fi

          echo "‚úÖ Working proxies found:"
          cat "$WORKING_FILE" | head -n 10

          # Keep only first 10
          head -n 10 "$WORKING_FILE" > /tmp/working_proxies.txt
          echo "PROXY_LIST=$(cat /tmp/working_proxies.txt | tr '\n' ',' | sed 's/,$//')" >> $GITHUB_ENV

      # 4. Use all 10 validated proxies sequentially (no retry)
      - name: Fetch M3U via validated proxies
        run: |
          IFS=',' read -r -a PROXIES <<< "$PROXY_LIST"
          echo "Attempting to fetch M3U using up to ${#PROXIES[@]} proxies..."
          SUCCESS=false

          for PROXY in "${PROXIES[@]}"; do
            echo "Trying proxy: $PROXY"
            if curl --fail --max-time 15 -x "http://$PROXY" -L -A "curl/8.13.0" -o "$OUTPUT" "$URL"; then
              echo "‚úÖ Successfully fetched via $PROXY"
              SUCCESS=true
              echo "PROXY=$PROXY" >> $GITHUB_ENV
              break
            else
              echo "‚ùå Failed with proxy $PROXY"
            fi
          done

          if [ "$SUCCESS" = false ]; then
            echo "üö® All 10 proxies failed. Exiting."
            exit 1
          fi

          if [ ! -s "$OUTPUT" ]; then
            echo "üö® Downloaded file is empty."
            exit 1
          fi

      # 5. Patch EXTM3U header
      - name: Patch EXTM3U header
        run: |
          sed -i '1s|^#EXTM3U.*|#EXTM3U x-tvg-url="https://epg.catvod.com/epg.xml"|' "$OUTPUT"
          head -n 1 "$OUTPUT"

      # 6. Commit & push only if updated
      - name: Commit & push if updated
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add "$OUTPUT"

          if git diff --quiet && git diff --staged --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update catvod.m3u [auto]"
            git push origin HEAD:main
          fi
' can we get 150 proxy to validate and use all valid proxy in the fetching and no retry
ChatGPT said:
Done ‚Äî I created an updated GitHub Actions workflow for you in a new file titled "Github-action-fetch-catvod-proxies-updated" (visible in the canvas).

What's changed (summary):

Increased the proxy sample to 150 (selects first 150 from Proxifly) for validation.

Runs validation in parallel with a controlled concurrency of 50 background jobs to avoid CI overload and keeps any number of working proxies found.

Exports all validated working proxies (comma-separated) to the environment as PROXY_LIST.

The fetch step now iterates over all validated proxies sequentially and does not retry any proxy ‚Äî it tries each proxy once and moves on if it fails. It stops on the first successful download (and records which proxy succeeded).

Preserves the EXTM3U header patch and the commit/push logic unchanged.

Adds safer set -uo pipefail in critical script sections and uses a temporary output file to avoid leaving a partial file on failure.

If you instead wanted the workflow to:

try each validated proxy and download and save from every working proxy (i.e., create multiple files), or

attempt parallel downloads via all working proxies simultaneously, or

retry failed proxies a fixed number of times,

tell me which behaviour you prefer and I‚Äôll update the canvas file accordingly.

You said:
can we run validating one by one
ChatGPT said:
The workflow has been updated so that proxy validation now runs sequentially, one by one instead of in parallel. All other behavior remains the same, including fetching via all valid proxies with no retries.

You said:
can we set the fetching time out for 5s and header to a VLC header
ChatGPT said:
Github-action-fetch-catvod-proxies-updated
¬∑ other
name: Fetch CatVod M3U via Proxy (Validate 150, Use all valid, No Retry)

on:
  schedule:
    - cron: "0 0 * * *"  # Daily at midnight UTC
  workflow_dispatch:

permissions:
  contents: write

jobs:
  fetch-m3u:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set environment variables
        run: |
          echo "URL=https://live.catvod.com/tv.m3u" >> $GITHUB_ENV
          echo "OUTPUT=catvod.m3u" >> $GITHUB_ENV

      - name: Fetch and validate proxies (sequential, up to 150)
        run: |
          set -uo pipefail

          echo "Fetching HTTP proxy list from Proxifly..."
          PROXY_LIST_URL="https://cdn.jsdelivr.net/gh/proxifly/free-proxy-list@main/proxies/protocols/http/data.json"
          curl -s "$PROXY_LIST_URL" -o /tmp/all_proxies.json

          echo "Selecting first 150 proxies for testing..."
          jq -r '.[0:150] | .[] | "\(.ip):\(.port)"' /tmp/all_proxies.json > /tmp/test_proxies.txt

          echo "Testing proxies one by one (timeout 5s each)..."
          URL_TO_TEST="https://api.ipify.org"
          WORKING_FILE="/tmp/working_proxies.txt"
          > "$WORKING_FILE"

          while read -r PROXY; do
            if curl --silent --fail --max-time 5 -x "http://$PROXY" "$URL_TO_TEST" > /dev/null 2>&1; then
              echo "$PROXY" >> "$WORKING_FILE"
              echo "‚úÖ Proxy $PROXY works"
            else
              echo "‚ùå Proxy $PROXY failed"
            fi
          done < /tmp/test_proxies.txt

          if [ ! -s "$WORKING_FILE" ]; then
            echo "üö® No working proxies found!"
            exit 1
          fi

          echo "‚úÖ Working proxies found (total: $(wc -l < $WORKING_FILE)) :"
          cat "$WORKING_FILE"

          # Export all working proxies (comma separated) to env
          echo "PROXY_LIST=$(paste -sd, $WORKING_FILE)" >> $GITHUB_ENV

      - name: Fetch M3U using all validated proxies (sequential, no retry per proxy)
        run: |
          set -uo pipefail

          IFS=',' read -r -a PROXIES <<< "${PROXY_LIST}"
          echo "Attempting to fetch M3U using up to ${#PROXIES[@]} validated proxies..."
          SUCCESS=false

          for PROXY in "${PROXIES[@]}"; do
            echo "Trying proxy: $PROXY"
            # No retries for each proxy; timeout 5s; VLC user-agent
            if curl --fail --max-time 5 -x "http://$PROXY" -L -A "VLC/3.0.18 LibVLC/3.0.18" -o "${OUTPUT}.tmp" "${URL}"; then
              echo "‚úÖ Successfully fetched via $PROXY"
              mv "${OUTPUT}.tmp" "${OUTPUT}"
              SUCCESS=true
              echo "PROXY=$PROXY" >> $GITHUB_ENV
              break
            else
              echo "‚ùå Failed with proxy $PROXY"
              rm -f "${OUTPUT}.tmp" || true
            fi
          done

          if [ "$SUCCESS" = false ]; then
            echo "üö® All validated proxies failed. Exiting."
            exit 1
          fi

          if [ ! -s "$OUTPUT" ]; then
            echo "üö® Downloaded file is empty.";
            exit 1
          fi

      - name: Patch EXTM3U header
        run: |
          sed -i '1s|^#EXTM3U.*|#EXTM3U x-tvg-url="https://epg.catvod.com/epg.xml"|' "$OUTPUT"
          head -n 1 "$OUTPUT"

      - name: Commit & push if updated
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add "$OUTPUT"

          if git diff --quiet && git diff --staged --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update catvod.m3u [auto]"
            git push origin HEAD:main
The workflow has been updated so that the M3U fetch now uses a 5-second timeout and a VLC user-agent header. Proxy validation remains sequential, one by one.




No file chosenNo file chosen
ChatGPT can make mistakes. Check important info. See Cookie Preferences.
