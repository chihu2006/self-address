name: Fetch CatVod M3U via Proxy (Validate 150, Use all valid, No Retry)

on:
  schedule:
    - cron: "0 0 * * *"  # Daily at midnight UTC
  workflow_dispatch:

permissions:
  contents: write

jobs:
  fetch-m3u:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set environment variables
        run: |
          echo "URL=https://live.catvod.com/tv.m3u" >> $GITHUB_ENV
          echo "OUTPUT=catvod.m3u" >> $GITHUB_ENV

      - name: Fetch and validate proxies (parallel, up to 150)
        run: |
          set -uo pipefail

          echo "Fetching HTTP proxy list from Proxifly..."
          PROXY_LIST_URL="https://cdn.jsdelivr.net/gh/proxifly/free-proxy-list@main/proxies/protocols/http/data.json"
          curl -s "$PROXY_LIST_URL" -o /tmp/all_proxies.json

          echo "Selecting first 150 proxies for testing..."
          jq -r '.[0:150] | .[] | "\(.ip):\(.port)"' /tmp/all_proxies.json > /tmp/test_proxies.txt

          echo "Testing proxies in parallel (timeout 5s each)..."
          URL_TO_TEST="https://api.ipify.org"
          WORKING_FILE="/tmp/working_proxies.txt"
          > "$WORKING_FILE"

          # Tunable concurrency - don't spawn too many background jobs in CI
          MAX_PARALLEL=50
          COUNT=0

          while read -r PROXY; do
            (
              if curl --silent --fail --max-time 5 -x "http://$PROXY" "$URL_TO_TEST" > /dev/null 2>&1; then
                echo "$PROXY" >> "$WORKING_FILE"
                echo "‚úÖ Proxy $PROXY works"
              else
                echo "‚ùå Proxy $PROXY failed"
              fi
            ) &

            ((COUNT++))
            if (( COUNT % MAX_PARALLEL == 0 )); then
              wait
            fi
          done < /tmp/test_proxies.txt
          wait

          if [ ! -s "$WORKING_FILE" ]; then
            echo "üö® No working proxies found!"
            exit 1
          fi

          echo "‚úÖ Working proxies found (total: $(wc -l < $WORKING_FILE)) :"
          cat "$WORKING_FILE"

          # Export all working proxies (comma separated) to env
          echo "PROXY_LIST=$(paste -sd, $WORKING_FILE)" >> $GITHUB_ENV

      - name: Fetch M3U using all validated proxies (sequential, no retry per proxy)
        run: |
          set -uo pipefail

          IFS=',' read -r -a PROXIES <<< "${PROXY_LIST}"
          echo "Attempting to fetch M3U using up to ${#PROXIES[@]} validated proxies..."
          SUCCESS=false

          for PROXY in "${PROXIES[@]}"; do
            echo "Trying proxy: $PROXY"
            # No retries for each proxy; if curl returns non-zero we move to next proxy
            if curl --fail --max-time 15 -x "http://$PROXY" -L -A "curl/8.13.0" -o "${OUTPUT}.tmp" "${URL}"; then
              echo "‚úÖ Successfully fetched via $PROXY"
              mv "${OUTPUT}.tmp" "${OUTPUT}"
              SUCCESS=true
              echo "PROXY=$PROXY" >> $GITHUB_ENV
              break
            else
              echo "‚ùå Failed with proxy $PROXY"
              rm -f "${OUTPUT}.tmp" || true
            fi
          done

          if [ "$SUCCESS" = false ]; then
            echo "üö® All validated proxies failed. Exiting."
            exit 1
          fi

          if [ ! -s "$OUTPUT" ]; then
            echo "üö® Downloaded file is empty.";
            exit 1
          fi

      - name: Patch EXTM3U header
        run: |
          sed -i '1s|^#EXTM3U.*|#EXTM3U x-tvg-url="https://epg.catvod.com/epg.xml"|' "$OUTPUT"
          head -n 1 "$OUTPUT"

      - name: Commit & push if updated
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add "$OUTPUT"

          if git diff --quiet && git diff --staged --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update catvod.m3u [auto]"
            git push origin HEAD:main
          fi
