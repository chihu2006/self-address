name: Fetch CatVod M3U via Proxy (Validate up to 600 sequential, Use all valid, No Retry)

on:
  schedule:
    - cron: "0 0 * * *"  # Daily at midnight UTC
  workflow_dispatch:

permissions:
  contents: write

jobs:
  fetch-m3u:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set environment variables
        run: |
          echo "URL=https://live.catvod.com/tv.m3u" >> $GITHUB_ENV
          echo "OUTPUT=catvod.m3u" >> $GITHUB_ENV

      - name: Fetch proxy list
        run: |
          echo "Fetching HTTP proxy list from Proxifly..."
          PROXY_LIST_URL="https://cdn.jsdelivr.net/gh/proxifly/free-proxy-list@main/proxies/protocols/http/data.json"
          curl -s "$PROXY_LIST_URL" -o /tmp/all_proxies.json

          # Extract up to 600 proxies
          jq -r '.[0:600] | .[] | "\(.ip):\(.port)"' /tmp/all_proxies.json > /tmp/test_proxies.txt

      - name: Validate proxies in batches of 50 (sequential)
        run: |
          set -uo pipefail

          LIGHT_URL="https://www.google.com/generate_204"
          CONNECT_URL="https://www.google.com/generate_204"
          WORKING_FILE="/tmp/working_proxies.txt"
          > "$WORKING_FILE"

          BATCH_SIZE=50
          TOTAL_PROXIES=$(wc -l < /tmp/test_proxies.txt)
          BATCHES=$(( (TOTAL_PROXIES + BATCH_SIZE - 1) / BATCH_SIZE ))

          for ((i=0; i<BATCHES; i++)); do
            echo "Processing batch $((i+1)) of $BATCHES"
            START=$(( i * BATCH_SIZE + 1 ))
            END=$(( START + BATCH_SIZE - 1 ))

            sed -n "${START},${END}p" /tmp/test_proxies.txt > /tmp/batch.txt

            # Phase 1: light test
            LIGHT_OK_FILE="/tmp/light_ok.txt"
            > "$LIGHT_OK_FILE"

            while read -r PROXY; do
              echo "[Light] Testing proxy: $PROXY"
              if curl --silent --fail --max-time 5 -x "http://$PROXY" "$LIGHT_URL" > /dev/null 2>&1; then
                echo "$PROXY" >> "$LIGHT_OK_FILE"
                echo "‚úÖ Light OK: $PROXY"
              else
                echo "‚ùå Light failed: $PROXY"
              fi
              sleep 0.3
            done < /tmp/batch.txt

            # Phase 2: CONNECT test
            while read -r PROXY; do
              echo "[CONNECT] Testing proxy: $PROXY"
              if curl --silent --fail --head --max-time 10 -x "http://$PROXY" "$CONNECT_URL" > /dev/null 2>&1; then
                echo "$PROXY" >> "$WORKING_FILE"
                echo "‚úÖ CONNECT OK: $PROXY"
              else
                echo "‚ùå CONNECT failed: $PROXY"
              fi
              sleep 0.5
            done < "$LIGHT_OK_FILE"

            # If any working proxies found, stop testing further batches
            if [ -s "$WORKING_FILE" ]; then
              echo "‚úÖ Found working proxies, stopping batch testing."
              break
            else
              echo "No valid proxies in this batch, moving to next batch."
            fi
          done

          if [ ! -s "$WORKING_FILE" ]; then
            echo "üö® No working proxies found in any batch!"
            exit 1
          fi

          echo "Working proxies found:"
          cat "$WORKING_FILE"
          echo "PROXY_LIST=$(paste -sd, $WORKING_FILE)" >> $GITHUB_ENV

      - name: Fetch M3U using validated proxies (sequential, no retry)
        run: |
          set -uo pipefail

          IFS=',' read -r -a PROXIES <<< "${PROXY_LIST}"
          echo "Attempting to fetch M3U using up to ${#PROXIES[@]} validated proxies..."
          SUCCESS=false

          for PROXY in "${PROXIES[@]}"; do
            echo "Trying proxy: $PROXY"
            if curl --fail --max-time 5 -x "http://$PROXY" -L -A "VLC/3.0.18 LibVLC/3.0.18" -o "${OUTPUT}.tmp" "${URL}"; then
              echo "‚úÖ Successfully fetched via $PROXY"
              mv "${OUTPUT}.tmp" "${OUTPUT}"
              SUCCESS=true
              echo "PROXY=$PROXY" >> $GITHUB_ENV
              break
            else
              echo "‚ùå Failed with proxy $PROXY"
              rm -f "${OUTPUT}.tmp" || true
            fi
          done

          if [ "$SUCCESS" = false ]; then
            echo "üö® All validated proxies failed. Exiting."
            exit 1
          fi

          if [ ! -s "$OUTPUT" ]; then
            echo "üö® Downloaded file is empty.";
            exit 1
          fi

      - name: Patch EXTM3U header
        run: |
          sed -i '1s|^#EXTM3U.*|#EXTM3U x-tvg-url="https://epg.catvod.com/epg.xml"|' "$OUTPUT"
          head -n 1 "$OUTPUT"

      - name: Commit & push if updated
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add "$OUTPUT"

          if git diff --quiet && git diff --staged --quiet; then
            echo "No changes to commit."
          else
            git commit -m "Update catvod.m3u [auto]"
            git push origin HEAD:main
          fi
